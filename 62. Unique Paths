/*
一个m*n的平面，一个小机器人在左上角，它每次只能往下或往右移动一格，目的是到达右下角的星星。求所有可能的路线。
动态规划：每一格的所有可能路径必定会来自上格和左格，依次往左上角前推即可。
而且第一行和第一列初值均为1，因为想到达只能一直往右或一直往下。
copy了一个Java的代码，Python写起来还是生疏……
*/
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] T = new int[m][n];
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            if (i == 0 && j > 0) {
                T[i][j] = 1;
            } else if (j == 0 && i > 0) {
                T[i][j] = 1;
            } else if (i > 0 && j > 0) {
                T[i][j] = T[i - 1][j] + T[i][j - 1];
            } else {
                T[i][j] = 1;
            }
        }
    }
    
    //  Time: O(M x N)
    // Space: O(M x N)
    return T[m - 1][n - 1];
}
}
