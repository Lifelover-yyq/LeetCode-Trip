# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        l3 = ListNode(0)
        lo = l3
        carry = False
        while l1 != None and l2 != None:
            sum = l1.val + l2.val + carry
            if sum >=10 :
                carry = True
                sum = sum % 10
            else: carry = False
            lo.next = ListNode(sum)
            lo = lo.next
            l1 = l1.next
            l2 = l2.next
        while l1 != None:
            sum = l1.val + carry
            if sum >=10 :
                carry = True
                sum = sum % 10
            else: carry = False
            lo.next = ListNode(sum)
            lo = lo.next
            l1 = l1.next
        while l2 != None:
            sum = l2.val + carry
            if sum >=10 :
                carry = True
                sum = sum % 10
            else: carry = False
            lo.next = ListNode(sum)
            lo = lo.next
            l2 = l2.next
        if carry:lo.next = ListNode(1)
        return l3.next
